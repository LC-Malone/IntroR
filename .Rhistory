```
#arrows <- are used to assign something...= can be used too, there is a difference and idk what it is
A <- 6
B <- 3
```{r}
#arrows <- are used to assign something...= can be used too, there is a difference and idk what it is
A <- 6
#you can run code by highlighting it and hitting "run" or by hitting cntrl enter on that line
#you can also type directly into the console, or arrow up in the console to rerun the same line
B <- 3
#you can use R like a glorified horrible calculator...but knowing this type of syntax is important for other stuff
6+3
A + B
C <- A + B
#pointing to the file
#this line will print out the data, but doesn't save it as anything
read.csv("doggies.csv", sep = ',')
setwd("~/IntroR")
setwd(~/IntroR)
setwd("~/IntroR")
print(A)
#pointing to the file
#this line will print out the data, but doesn't save it as anything
read.csv("doggies.csv", sep = ',')
#arrows <- are used to assign something...= can be used too, there is a difference and idk what it is
A <- 6
#you can run code by highlighting it and hitting "run" or by hitting cntrl enter on that line
#you can also type directly into the console, or arrow up in the console to rerun the same line
B <- 3
#you can use R like a glorified horrible calculator...but knowing this type of syntax is important for other stuff
6+3
A + B
C <- A + B
#Another important thing to note in R is that you are typically running a "function" on an "object"
#functions are generally verbs, and followed by parentheses...like this:
print(A)
#objects are nouns - things like your data, a model you wrote, etc. A, B, & C are just values, but in a bit we will input a data frame.
#This function prints your working directory:
getwd()
#you can specify file paths, but it's much easier to set your working directory - you can go up to "Session>Set Working Directory>source file location or wherever else you have data saved, or specify:
setwd("~/IntroR")
#pointing to the file
#this line will print out the data, but doesn't save it as anything
read.csv("doggies.csv", sep = ',')
#by assigning it a name, R remembers the dataset now...note that it doesn't matter what you name things - even though the file is named "doggies" I can reassign it to "puppers" and R doesn't care.
puppers <- read.csv("doggies.csv")
#this allows you to look at the different data types
str(puppers)
plot(age)
plot(puppers$age)
plot(weight~age, data = puppers)
boxplot(age~color, data=puppers)
library(ggplot2)
ggplot(puppers, aes(x=weight, y=age)) +
geom_point(aes(col=color))
library(ggplot2)
ggplot(puppers, aes(x=weight, y=age, color=color)) +
geom_point(aes(col=color)) +
theme_bw()+
scale_color_manual(values = c("black"="black",
"brown"="brown"))
ggplot(puppers, aes(x=weight, y=age, color=color)) +
geom_point(aes(col=color, size=5)) +
theme_bw()+
scale_color_manual(values = c("black"="black",
"brown"="brown"))
ggplot(puppers, aes(x=weight, y=age, color=color)) +
geom_point(aes(col=color, size=5)) +
theme_bw()+
scale_color_manual(values = c("black"="black",
"brown"="sienna4"))
library(ggplot2)
ggplot(puppers, aes(x=weight, y=age, color=color)) +
geom_point(aes(col=color, size=5)) +
theme_bw()+
scale_color_manual(values = c("black"="black",
"brown"="sienna4"))
getwd()
Since real data is more fun than fake data, the practice data set for today is about my family's dogs - here are 2 of these doggos enjoying life. A must for learning R is taking breaks to enjoy life like Tally & Willow! They are pros at taking breaks.
